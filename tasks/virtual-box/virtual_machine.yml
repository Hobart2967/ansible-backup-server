---

- name: Check if Virtual Machine Directory exists
  stat:
    path: "{{ vm.baseDirectory }}/{{vm.name}}"
  register: vm_directory_exists

- name: Change Machines Folder to {{ vm.baseDirectory }}
  ansible.builtin.command: VBoxManage setproperty machinefolder {{ vm.baseDirectory }}
  when: vm_directory_exists.stat.exists == False

- name: Create VM
  ansible.builtin.command: VBoxManage createvm --name "{{ vm.name }}" --ostype "Windows2008_64" --register
  when: vm_directory_exists.stat.exists == False

- name: "{{ vm.name }}: Reset Virtual Machines Folder to default"
  ansible.builtin.command: VBoxManage setproperty machinefolder default
  when: vm_directory_exists.stat.exists == False

- name: "{{ vm.name }}: Add SATA Controller"
  ansible.builtin.command: VBoxManage storagectl "{{ vm.name }}" --name "SATA Controller" --add sata --controller IntelAHCI
  when: vm_directory_exists.stat.exists == False

- name: "{{ vm.name }}: Attach HardDrive"
  ansible.builtin.command: VBoxManage storageattach "{{ vm.name }}" --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium {{ vm.hard_drive_path }}
  when: vm_directory_exists.stat.exists == False

- name: "{{ vm.name }}: Enable IOAPIC"
  ansible.builtin.command: VBoxManage modifyvm "{{ vm.name }}" --ioapic on

- name: "{{ vm.name }}: Set Boot Order"
  ansible.builtin.command: VBoxManage modifyvm "{{ vm.name }}" --boot1 dvd --boot2 disk --boot3 none --boot4 none

- name: "{{ vm.name }}: Set Memory"
  ansible.builtin.command: VBoxManage modifyvm "{{ vm.name }}" --memory {{ vm.memory }} --vram {{ vm.gpu_memory }}

- name: "{{ vm.name }}: Configure Networking"
  ansible.builtin.command: VBoxManage modifyvm "{{ vm.name }}" --nic1 bridged --bridgeadapter1 {{ ansible_default_ipv4.interface }}

- name: "{{ vm.name }}: Enable RDP"
  ansible.builtin.command: VBoxManage modifyvm "{{ vm.name }}" --vrde on